(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{283:function(t,a,s){"use strict";s.r(a);var e=s(38),n=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"js的特殊点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js的特殊点","aria-hidden":"true"}},[t._v("#")]),t._v(" Js的特殊点")]),t._v(" "),s("h2",{attrs:{id:"重要的又容易被忽略的-js-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重要的又容易被忽略的-js-api","aria-hidden":"true"}},[t._v("#")]),t._v(" 重要的又容易被忽略的 JS API")]),t._v(" "),s("h3",{attrs:{id:"reducer-js-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reducer-js-api","aria-hidden":"true"}},[t._v("#")]),t._v(" reducer(js api)")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("数组方法")])]),t._v(" "),s("li",[s("p",[t._v("接受两个参数")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("第一个参数是个函数,函数入参,第一个为初始值,第二个当前数组元素")])]),t._v(" "),s("li",[s("p",[t._v("第二个入参为初始值")])])])])]),t._v(" "),s("h3",{attrs:{id:"对象属性描述器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象属性描述器","aria-hidden":"true"}},[t._v("#")]),t._v(" 对象属性描述器")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("定义")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'attr'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyDescriptor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'attr'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出: {configurable: false,enumerable: false,value: undefined,writable: false}")]),t._v("\n  obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("another "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyDescriptor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'another'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出: {configurable: true,enumerable: true,value: 4,writable: true}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原因:浏览器默认在特定操作(给对象的新属性赋值)过程中默认给新属性添加了一个属性描述符,前提条件:赋值前属性还未进行手动设置描述器")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.value 和 writable两个属性与get/set 存取操作符相斥,不能同时存在  ")]),t._v("\n  \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.函数内涉及的属性不能用设置描述器时的属性(attr),否则会产生无限自调用,死循环,如下:  ")]),t._v("\n  \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  \t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("otherAttr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  \n  \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n  \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  \t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("otherAttr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" val  \n  \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("获取")]),t._v(" "),s("ul",[s("li",[t._v("Object.getOwnPropertyDescriptor(obj,'attr')")])])])]),t._v(" "),s("h3",{attrs:{id:"for-in-object-keys"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for-in-object-keys","aria-hidden":"true"}},[t._v("#")]),t._v(" for...in / Object.keys()")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("for...in")]),t._v(" "),s("ul",[s("li",[t._v("可遍历原型链上的属性")])])]),t._v(" "),s("li",[s("p",[t._v("Object.keys")]),t._v(" "),s("ul",[s("li",[t._v("仅仅可遍历自身上的可遍历属性")])])])]),t._v(" "),s("h3",{attrs:{id:"object-seal-object-freeze"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-seal-object-freeze","aria-hidden":"true"}},[t._v("#")]),t._v(" Object.seal/Object.freeze")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("freeze")]),t._v(" "),s("ul",[s("li",[t._v("冻结对象,对象不能增删改已有属性,也不能新添属性,不能更改对象的属性描述器")])])]),t._v(" "),s("li",[s("p",[t._v("sea1l")]),t._v(" "),s("ul",[s("li",[t._v("封闭对象,阻止添加新属性并将当前已有属性设为不可配置,当前属性的值若可写则可写")])])]),t._v(" "),s("li",[s("p",[t._v("区别")]),t._v(" "),s("ul",[s("li",[t._v("freeze会将属性描述符writable设为false,seal会保持writable的属性值,换句话说用在调用Object.seal()之前\n若writable为true,则调用后该属性值可赋值,否则赋值不成功")])])])]),t._v(" "),s("h3",{attrs:{id:"object-getownpropertydescriptors-obj"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-getownpropertydescriptors-obj","aria-hidden":"true"}},[t._v("#")]),t._v(" Object.getOwnPropertyDescriptors(obj)")]),t._v(" "),s("ul",[s("li",[t._v("得到对象所有属性的属性器")])]),t._v(" "),s("h2",{attrs:{id:"引用型数据连等赋值-面试题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用型数据连等赋值-面试题","aria-hidden":"true"}},[t._v("#")]),t._v(" 引用型数据连等赋值(面试题)")]),t._v(" "),s("h3",{attrs:{id:"代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码","aria-hidden":"true"}},[t._v("#")]),t._v(" 代码")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n  a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"解析步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解析步骤","aria-hidden":"true"}},[t._v("#")]),t._v(" 解析步骤:")]),t._v(" "),s("ul",[s("li",[s("ol",[s("li",[t._v("a.x中的.优先级比较高,先找到{n:1}中的x值,没有就赋值为undefined标记一下")])])]),t._v(" "),s("li",[s("p",[t._v("2.等待第一个等号后面返回值")])]),t._v(" "),s("li",[s("p",[t._v("3.a 储存的指针改变,变为新的{n:2},返回第二个等号后面的{n:2}的对应地址")])]),t._v(" "),s("li",[s("p",[t._v("4.将地址赋值给a.x替换掉undefined")])])]),t._v(" "),s("h2",{attrs:{id:"数据转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据转换","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据转换")]),t._v(" "),s("h3",{attrs:{id:"nan、undefined、null-的转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nan、undefined、null-的转换","aria-hidden":"true"}},[t._v("#")]),t._v(" NaN、undefined、null 的转换")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("NaN")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("转为字符串")]),t._v(" "),s("ul",[s("li",[t._v("'NaN'")])])]),t._v(" "),s("li",[s("p",[t._v("转为布尔值")]),t._v(" "),s("ul",[s("li",[t._v("false")])])])])]),t._v(" "),s("li",[s("p",[t._v("undefined")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("转为字符串")]),t._v(" "),s("ul",[s("li",[t._v('"undefined"')])])]),t._v(" "),s("li",[s("p",[t._v("转为布尔值")]),t._v(" "),s("ul",[s("li",[t._v("false")])])]),t._v(" "),s("li",[s("p",[t._v("转为数字")]),t._v(" "),s("ul",[s("li",[t._v("NaN")])])])])]),t._v(" "),s("li",[s("p",[t._v("null")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("转为字符串")]),t._v(" "),s("ul",[s("li",[t._v("'null'")])])]),t._v(" "),s("li",[s("p",[t._v("转为布尔值")]),t._v(" "),s("ul",[s("li",[t._v("false")])])]),t._v(" "),s("li",[s("p",[t._v("转为数字")]),t._v(" "),s("ul",[s("li",[t._v("0")])])])])])]),t._v(" "),s("h3",{attrs:{id:"被转换成nan、undefined、null"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#被转换成nan、undefined、null","aria-hidden":"true"}},[t._v("#")]),t._v(" 被转换成NaN、undefined、null")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("NaN")]),t._v(" "),s("ul",[s("li",[t._v("undefined、对象、数组(除了此情况: 仅有一个元素且该元素可转为数字而且转为的值为数字(非NaN))、函数、字符串(包含非数字的字符串)都会转成NaN")])])]),t._v(" "),s("li",[s("p",[t._v("undefined")]),t._v(" "),s("ul",[s("li",[t._v("貌似没有")])])]),t._v(" "),s("li",[s("p",[t._v("null")]),t._v(" "),s("ul",[s("li",[t._v("貌似也没有")])])])]),t._v(" "),s("h3",{attrs:{id:"对象转原始类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象转原始类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 对象转原始类型")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("1.如果用"),s("code",[t._v("String()")]),t._v("直接转为字符串类型,则直接调用toString()")])]),t._v(" "),s("li",[s("p",[t._v("2.如果仅仅隐式转换为基本类型,则先调用valueOf(),如果还没转换为基本数据类型则继续调用toString()")])])]),t._v(" "),s("p",[t._v("###四则运算")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("*** 加法 + ***")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("1.如果一方为字符串,都转为字符串")])]),t._v(" "),s("li",[s("p",[t._v("2.如果一方不为字符串或者数字且令一方不为字符串,则分两种情况来看")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("基本数据类型")]),t._v(" "),s("ul",[s("li",[t._v("直接转为数字,字符串,优先顺序同顺序")])])]),t._v(" "),s("li",[s("p",[t._v("引用数据类型")]),t._v(" "),s("ul",[s("li",[t._v("同 '对象转原始类型' 方法,非优先转换成数子")])])])])])])]),t._v(" "),s("li",[s("p",[t._v("其他运算符")]),t._v(" "),s("ul",[s("li",[t._v("只要一方是数字,另一方若为非数字则转为数字")])])])]),t._v(" "),s("h3",{attrs:{id:"和"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#和","aria-hidden":"true"}},[t._v("#")]),t._v(" ==和===")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("==")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("1.如果前后类型相同,比较大小")])]),t._v(" "),s("li",[s("p",[t._v("2.如果一方是null,另一方为undefined,直接返回true")])]),t._v(" "),s("li",[s("p",[t._v("3.如果不同,则会类型转换")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("a.如果一方为数字,一方为字符串,则统一转换为数字")])]),t._v(" "),s("li",[s("p",[t._v("b.其中一方为boolean,则转为数字比较")])]),t._v(" "),s("li",[s("p",[t._v("c.其中一方为引用型数据类型,另一方为数字,字符串或者symbol,则转换引用类型数据,方法同 '对象转原始类型'")]),t._v(" "),s("ul",[s("li",[t._v("tips: 1.只有数组且只有一个数字元换为number非NaN,如:+[2] --\x3e 2"),s("br"),t._v("\n2.数组转为字符串得到以逗号分隔由各个元素拼接而成的字符串"),s("br"),t._v('\n3.对象转为字符串得到"[object Object]"')])])])])])])])]),t._v(" "),s("h2",{attrs:{id:"字面量字符串-字符串构造函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字面量字符串-字符串构造函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 字面量字符串/字符串构造函数")]),t._v(" "),s("h3",{attrs:{id:"字面量字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字面量字符串","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("strong",[t._v("字面量字符串")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("是一个基本数据类型")])]),t._v(" "),s("li",[s("p",[t._v("当调用字符串的方法时,会隐式产生一个相应的构造实例,调用String上的方法,返回得到的值赋给原有的基本数据类型. 然后构造实例自己销毁")])])]),t._v(" "),s("h3",{attrs:{id:"构造生成的字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造生成的字符串","aria-hidden":"true"}},[t._v("#")]),t._v(" 构造生成的字符串")]),t._v(" "),s("ul",[s("li",[t._v("是一个类,不过value为基本数据类型的字符串")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("这是加粗的文字"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("这是倾斜的文字"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("`\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("这是斜体加粗的文字"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v("这是加删除线的文字"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("ul",[s("li",[t._v("效果如下:")]),t._v(" "),s("li",[s("strong",[t._v("这是加粗的文字")]),t._v(" "),s("em",[t._v("这是倾斜的文字")]),t._v("`\n"),s("em",[s("strong",[t._v("这是斜体加粗的文字")])]),t._v(" "),s("s",[t._v("这是加删除线的文字")])])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("这是引用的内容\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v("这是引用的内容\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("这是引用的内容\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("blockquote",[s("p",[t._v("这是引用的内容")]),t._v(" "),s("blockquote",[s("p",[t._v("这是引用的内容")]),t._v(" "),s("blockquote",[s("blockquote",[s("blockquote",[s("blockquote",[s("blockquote",[s("blockquote",[s("blockquote",[s("blockquote",[s("p",[t._v("这是引用的内容")])])])])])])])])])])])])},[],!1,null,null,null);a.default=n.exports}}]);