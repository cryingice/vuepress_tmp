(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{278:function(a,e,t){"use strict";t.r(e);var r=t(38),i=Object(r.a)({},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"面试题整理二"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面试题整理二","aria-hidden":"true"}},[a._v("#")]),a._v(" 面试题整理二")]),a._v(" "),t("h2",{attrs:{id:"引用型数据连等赋值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引用型数据连等赋值","aria-hidden":"true"}},[a._v("#")]),a._v(" 引用型数据连等赋值")]),a._v(" "),t("h3",{attrs:{id:"var-a-n-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#var-a-n-1","aria-hidden":"true"}},[a._v("#")]),a._v(" var a = {n: 1};")]),a._v(" "),t("p",[a._v("var b = a;"),t("br"),a._v("\na.x = a = {n: 2};")]),a._v(" "),t("h3",{attrs:{id:"解析步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解析步骤","aria-hidden":"true"}},[a._v("#")]),a._v(" 解析步骤:")]),a._v(" "),t("ul",[t("li",[t("ol",[t("li",[a._v("a.x中的.优先级比较高,先找到{n:1}中的x值,没有就赋值为undefined标记一下")])])]),a._v(" "),t("li",[t("p",[a._v("2.等待第一个等号后面返回值")])]),a._v(" "),t("li",[t("p",[a._v("3.a 储存的指针改变,变为新的{n:2},返回第二个等号后面的{n:2}的对应地址")])]),a._v(" "),t("li",[t("p",[a._v("4.将地址赋值给a.x替换掉undefined")])])]),a._v(" "),t("h2",{attrs:{id:"几种模块化引入方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#几种模块化引入方式","aria-hidden":"true"}},[a._v("#")]),a._v(" 几种模块化引入方式")]),a._v(" "),t("h3",{attrs:{id:"_1-common-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-common-js","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"1.common.js"}},[a._v("1.common.js")])]),a._v(" "),t("ul",[t("li",[t("p",[a._v("require引入的是模块运行后返回的全局对象,然后在赋值给具体的属性名或方法名(运行式加载)")])]),a._v(" "),t("li",[t("p",[a._v("一旦输出值后,模块后面内部变化将不会影响这个输出值")])])]),a._v(" "),t("h3",{attrs:{id:"_2-es6-moudule"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-es6-moudule","aria-hidden":"true"}},[a._v("#")]),a._v(" 2.es6 moudule")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("在编译过程中获取文件指定的输出代码,不需要运行获取(编译式加载)")])]),a._v(" "),t("li",[t("p",[a._v("import引入必须放在文件最前面")])]),a._v(" "),t("li",[t("p",[a._v("import引入的是一个接口")])]),a._v(" "),t("li",[t("p",[a._v("es6源码解析后还是转换为require的形式")])]),a._v(" "),t("li",[t("p",[a._v("import需要重命名是用as来替换")])]),a._v(" "),t("li",[t("p",[a._v("export default A 本质是 将 A赋值给default")])]),a._v(" "),t("li",[t("p",[a._v("对于输出文件都是export输出,在引入文件可用import * as newName from '../a.js'")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("返回一个对象,对象包括文件export 、export default两种定义的变量")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("export default定义的变量key值为default")])]),a._v(" "),t("li",[t("p",[a._v("export 定义变量key值为变量名称")])])])])])])]),a._v(" "),t("h3",{attrs:{id:"_3-amd-require-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-amd-require-js","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.Amd (require.js)")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("异步加载模块")])]),a._v(" "),t("li",[t("p",[a._v("define定义一个模块")]),a._v(" "),t("ul",[t("li",[a._v("define(id,[depends],function(moduleName1,moduleName2){})")])])]),a._v(" "),t("li",[t("p",[a._v("require加载一个模块")]),a._v(" "),t("ul",[t("li",[a._v("require(module,fn)")])])])]),a._v(" "),t("h3",{attrs:{id:"_4-cmd-sea-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-cmd-sea-js","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.Cmd(sea.js)")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("同步加载模块,需要啥引入啥")])]),a._v(" "),t("li",[t("p",[a._v("define定义模块")]),a._v(" "),t("ul",[t("li",[a._v("define(function(require,exports,module){})")])])]),a._v(" "),t("li",[t("p",[a._v("sea.use加载模块")]),a._v(" "),t("ul",[t("li",[a._v("sea.use([module],fn)")])])])]),a._v(" "),t("h2",{attrs:{id:"localstorage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#localstorage","aria-hidden":"true"}},[a._v("#")]),a._v(" localStorage")]),a._v(" "),t("h3",{attrs:{id:"只能存字符串"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#只能存字符串","aria-hidden":"true"}},[a._v("#")]),a._v(" 只能存字符串")]),a._v(" "),t("h3",{attrs:{id:"如果储存对象-会调用tostring方法将其转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如果储存对象-会调用tostring方法将其转换","aria-hidden":"true"}},[a._v("#")]),a._v(" 如果储存对象,会调用toString方法将其转换")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("所以一般对象、数组会在在存入前调用JSON.stringfy()转换为json")])]),a._v(" "),t("li",[t("p",[a._v("取出对象用localStorage.getItem(key)")])]),a._v(" "),t("li",[t("p",[a._v("取出后利用JSON.parse(jsonStr)转成对象")])]),a._v(" "),t("li",[t("p",[a._v("JSON.stringify()在转成json字符串的时候会忽略undefined、symbol、函数")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("例子:1)let newObj = {a:1,b:undefined,c:null,d:{c:44,g:{a:1},dd:undefined,ee:Symbol('77')},g:Symbol('sd'),fn:function(){}}")])]),a._v(" "),t("li",[t("p",[a._v('2)JSON.stringify(newObj) -> "{"a":1,"c":null,"d":{"c":44,"g":{"a":1}}}"')])])])])]),a._v(" "),t("h3",{attrs:{id:"localstorage声明周期永久-除非用户手动删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#localstorage声明周期永久-除非用户手动删除","aria-hidden":"true"}},[a._v("#")]),a._v(" localStorage声明周期永久,除非用户手动删除")]),a._v(" "),t("h3",{attrs:{id:"于sessionstorage的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#于sessionstorage的区别","aria-hidden":"true"}},[a._v("#")]),a._v(" 于sessionStorage的区别")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("sessionStorage声明周期仅在tab窗口存在时间,localStorage则是永久")])]),a._v(" "),t("li",[t("p",[a._v("前者不支持tab窗口共享数据,后者支持")])])]),a._v(" "),t("h2",{attrs:{id:"token"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#token","aria-hidden":"true"}},[a._v("#")]),a._v(" token")]),a._v(" "),t("h3",{attrs:{id:"ajax传递token的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ajax传递token的作用","aria-hidden":"true"}},[a._v("#")]),a._v(" ajax传递token的作用")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("1)防止表单提交重复,比对服务器session中的token 和 用户请求携带的token,如果相同服务器更新token返给客户端,客户端没接收到响应数据过程中,再次提交表单,明显就不一致了,服务器忽略此次请求")])]),a._v(" "),t("li",[t("p",[a._v("防止跨站请求伪造")]),a._v(" "),t("ul",[t("li",[a._v("跨站请求的话发送的token和服务器session存的不一样")])])])]),a._v(" "),t("h3",{attrs:{id:"请求头设置token"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#请求头设置token","aria-hidden":"true"}},[a._v("#")]),a._v(" 请求头设置token")]),a._v(" "),t("ul",[t("li",[a._v("xhr.setRequestHeader('token',token)")])]),a._v(" "),t("h3",{attrs:{id:"储存token"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#储存token","aria-hidden":"true"}},[a._v("#")]),a._v(" 储存token")]),a._v(" "),t("ul",[t("li",[a._v("在返回数据成功后window.sessionStorage.setItem('token',data['token'])")])]),a._v(" "),t("h2",{attrs:{id:"事件捕获和冒泡"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事件捕获和冒泡","aria-hidden":"true"}},[a._v("#")]),a._v(" 事件捕获和冒泡")]),a._v(" "),t("h3",{attrs:{id:"w3c标准规定先捕获后冒泡"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#w3c标准规定先捕获后冒泡","aria-hidden":"true"}},[a._v("#")]),a._v(" w3c标准规定先捕获后冒泡")]),a._v(" "),t("h3",{attrs:{id:"只能阻止继续冒泡-捕获过程不阻止"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#只能阻止继续冒泡-捕获过程不阻止","aria-hidden":"true"}},[a._v("#")]),a._v(" 只能阻止继续冒泡,捕获过程不阻止")]),a._v(" "),t("ul",[t("li",[a._v("e.stopPropagation()")])]),a._v(" "),t("h3",{attrs:{id:"addeventlistener函数第三个参数是boolean"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#addeventlistener函数第三个参数是boolean","aria-hidden":"true"}},[a._v("#")]),a._v(" addEventListener函数第三个参数是boolean")]),a._v(" "),t("ul",[t("li",[a._v("默认useCapture为false,默认为接受冒泡事件,拒绝捕获事件")])]),a._v(" "),t("h3",{attrs:{id:"第三个参数为options时-为一个对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第三个参数为options时-为一个对象","aria-hidden":"true"}},[a._v("#")]),a._v(" 第三个参数为options时,为一个对象")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("新版本浏览器采用这个变更")])]),a._v(" "),t("li",[t("p",[a._v("使用前需要用能力检测一下,能使用options不")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("var canPassive = false;"),t("br"),a._v("\ntry{"),t("br"),a._v("\nvar options = Object.defineProperty({},'passive',{"),t("br"),a._v("\nget(){"),t("br"),a._v("\ncanPassive = true;"),t("br"),a._v("\n}"),t("br"),a._v("\n})"),t("br"),a._v("\nwindow.addEventListener(null,function(){},options)"),t("br"),a._v("\n}catch(err){")]),a._v(" "),t("p",[a._v("}")])])])]),a._v(" "),t("li",[t("p",[a._v("options对象")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("capture")]),a._v(" "),t("ul",[t("li",[a._v("true:捕获阶段传到target时触发监听函数"),t("br"),a._v("\nfalse:冒泡阶段....")])])]),a._v(" "),t("li",[t("p",[a._v("passive")]),a._v(" "),t("ul",[t("li",[a._v("监听函数永远不会调用preventDefault(),如果调用,浏览器给出警告并忽略它")])])]),a._v(" "),t("li",[t("p",[a._v("once")]),a._v(" "),t("ul",[t("li",[a._v("注册之后调用一次后自行移除")])])])])])]),a._v(" "),t("h2",{attrs:{id:"flex布局"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex布局","aria-hidden":"true"}},[a._v("#")]),a._v(" flex布局")]),a._v(" "),t("h3",{attrs:{id:"flex-flex-grow-flex-shrink-flex-basis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex-flex-grow-flex-shrink-flex-basis","aria-hidden":"true"}},[a._v("#")]),a._v(" flex: flex-grow flex-shrink flex-basis")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("flex-grow:当子元素加起来的空间<父元素空间时,按比例分配多余空间,若不设置时默认为0")])]),a._v(" "),t("li",[t("p",[a._v("flex-shrink:不设置时默认为1")])]),a._v(" "),t("li",[t("p",[a._v("flex-shirink:当子元素加起来的空间>父元素空间时,当前元素空间contentA:"),t("br"),a._v("\n父元素宽度 F;"),t("br"),a._v("\n计算总宽T = widthA * shirinkA +widthB * shirinkB;"),t("br"),a._v("\n多出宽度 D = T-F;"),t("br"),a._v("\nB = widthA * shirinkA / T"),t("br"),a._v("\ncontentA = widthA - B * D")]),a._v(" "),t("ul",[t("li",[a._v("一句话: 去除多出空间所占的比例,比例权重为felx-shirink 乘以 元素宽度 的比重")])])]),a._v(" "),t("li",[t("p",[a._v("flex:auto ->flex: 1 1 auto;")])]),a._v(" "),t("li",[t("p",[a._v("flex:none -> flex:0 0 auto;")])]),a._v(" "),t("li",[t("p",[a._v("flex:2 ->flex : 2 1 0%;")]),a._v(" "),t("ul",[t("li",[a._v("第一个无单位数 作为flex-grow,第二个无单位数作为flex-shirink,第二个若为百分比或者px、em怎么为flex-basis")])])]),a._v(" "),t("li",[t("p",[a._v("flex:0 auto/flex: initial -> flex: 0 1 auto;")])]),a._v(" "),t("li",[t("p",[a._v("计算盒子的依据宽度(高度)优先顺序: flex-basis > width > auto ,如果flex-basis 和 width 都没有,那么默认为0")])])]),a._v(" "),t("h2",{attrs:{id:"history-和-hash-路由的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#history-和-hash-路由的区别","aria-hidden":"true"}},[a._v("#")]),a._v(" history 和 hash 路由的区别")]),a._v(" "),t("h3",{attrs:{id:"hash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hash","aria-hidden":"true"}},[a._v("#")]),a._v(" hash")]),a._v(" "),t("ul",[t("li",[a._v("利用hash操作\"#'后面内容不会造成向服务器请求重新加载新页面,可通过onHashChange来监听链接改变")])]),a._v(" "),t("h3",{attrs:{id:"history"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#history","aria-hidden":"true"}},[a._v("#")]),a._v(" history")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("利用h5新增pushState 和 replaceState两个api来实现修改url记录栈,当利用浏览器的back、forward、go时不会向后端发起请求,可通过popState来监听url的改变")])]),a._v(" "),t("li",[t("p",[a._v("history模式下对于无静态资源的链接需要后端配合返回一个index.html页面")])])])])},[],!1,null,null,null);e.default=i.exports}}]);